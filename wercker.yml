box: combient/java-mvn
dev:
  services:
    - id: redis
  steps:
    - script:
        code: export PORT='8082'
    - script:
        code: 'mvn -Dmaven.repo.local=$WERCKER_CACHE_DIR package'
    - script:
        code: 'mvn -Dmaven.repo.local=$WERCKER_CACHE_DIR spring-boot:run'
build:
  services:
    - id: redis
  steps:
    - script:
        code: 'mvn package'
    - script:
        code: cp $WERCKER_SOURCE_DIR/target/wercker-example-java-spring-redis.jar /app.jar
    - internal/docker-push:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        cmd: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"
        repository: combient/wercker-example-java-spring-redis
        tag: ${WERCKER_GIT_COMMIT}
        registry: https://registry.hub.docker.com
deploy:
    debug:
    - script:
        code: echo ${WERCKER_GIT_COMMIT}
    upgrade:
    - script:
        name: create java-spring-redis-rc.json
        code: ${WERCKER_SOURCE_DIR}/kubernetes/create-java-spring-redis-rc.sh
    - script:
        code: echo ${WERCKER_GIT_COMMIT}
    - script:
        code: cat java-spring-redis-rc.json
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: delete rc java-spring-redis
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: create -f java-spring-redis-rc.json
    rolling-update:
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        insecure-skip-tls-verify: true
        command: rolling-update java-spring-redis
        image: combient/wercker-example-java-spring-redis:${WERCKER_GIT_COMMIT}